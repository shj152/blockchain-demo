extends layout

block content
  .container-fluid
    h1 #{__('Coinbase Transactions')}
    - var peers = {1: 'A', 2: 'B', 3: 'C'}
    each peer, chain in peers
      h3 #{__('Peer')} #{peer}
      .row.row-horizon
        - var blocks = []
        - blocks.push({block: 1, chain: chain, nonce: 42971, coinbasevalue: '100.00', coinbaseto: 'შალვა', txs: [], previous: '0000000000000000000000000000000000000000000000000000000000000000'})
        - blocks.push({block: 2, chain: chain, nonce: 39401, coinbasevalue: '100.00', coinbaseto: 'შალვა', txs: [{value: '10.00', from: 'შალვა', to: 'სოფო'},{value: '20.00', from: 'შალვა', to: 'ლუკა'},{value: '15.00', from: 'შალვა', to: 'ნინო'},{value: '15.00', from: 'შალვა', to: 'გურამი'}], previous: '000083d3a4b14d8ba80326ad9fd70e917815e9b7ce1afae85b2cc0d2a0847dd3'})
        - blocks.push({block: 3, chain: chain, nonce: 53929, coinbasevalue: '100.00', coinbaseto: 'შალვა', txs: [{value: '10.00', from: 'ნინო', to: 'ნიკა'},{value: '5.00', from: 'გურამი', to: 'ნიკა'},{value: '20.00', from: 'ლუკა', to: 'ნუცა'}], previous: '0000816fd3bbf96f349f9fd433a1f748c221068b30db5fea2bfb7736d0248f9f'})
        - blocks.push({block: 4, chain: chain, nonce: 131389, coinbasevalue: '100.00', coinbaseto: 'შალვა', txs: [{value: '15.00', from: 'ნიკა', to: 'გიორგი'},{value: '5.00', from: 'ნინო', to: 'გურამი'},{value: '8.00', from: 'სოფო', to: 'ნიკა'}], previous: '00009ae4f379cc1fcf60885b0cf0fec22d680e034aedce730c8a010dc86e8c0b'})
        - blocks.push({block: 5, chain: chain, nonce: 39191, coinbasevalue: '100.00', coinbaseto: 'სოფო', txs: [{value: '2.00', from: 'ნიკა', to: 'თამუნა'},{value: '6.00', from: 'გიორგი', to: 'მარიამი'},{value: '4.00', from: 'გიორგი', to: 'ნატა'},{value: '9.95', from: 'ნუცა', to: 'ქეთი'}], previous: '0000988ece1c38b1799e9fc7b735950ff68f392573c077633f92647c69dcbad1'})
        each block in blocks
          .col-xs-7
            include includes/coinbaseblock

  script.
    $(function() {
      setup(1, 1);
      setup(2, 1);
      setup(3, 1);
      setup(4, 1);
      setup(5, 1);

      setup(1, 2);
      setup(2, 2);
      setup(3, 2);
      setup(4, 2);
      setup(5, 2);

      setup(1, 3);
      setup(2, 3);
      setup(3, 3);
      setup(4, 3);
      setup(5, 3);
    });

    function getText(block, chain) {
      var s = $('#block'+block+'chain'+chain+'number').val() +
              $('#block'+block+'chain'+chain+'nonce').val() +
              $('#block'+block+'chain'+chain+'coinbasevalue').val() +
              $('#block'+block+'chain'+chain+'coinbaseto').val();

      for (var x=0; $('#block'+block+'chain'+chain+'tx'+x+'value').length > 0; x++) {
        s = s + $('#block'+block+'chain'+chain+'tx'+x+'value').val() +
                $('#block'+block+'chain'+chain+'tx'+x+'from').val() +
                $('#block'+block+'chain'+chain+'tx'+x+'to').val();
      }
      s = s + $('#block'+block+'chain'+chain+'previous').val();
      return s;
    }

    function setup(block, chain) {
      updateHash(block, chain);
      $('#block'+block+'chain'+chain+'number').bind('input propertychange', function() { updateChain(block, chain); });
      $('#block'+block+'chain'+chain+'nonce').bind('input propertychange', function() { updateChain(block, chain); });
      $('#block'+block+'chain'+chain+'coinbasevalue').bind('input propertychange', function() { updateChain(block, chain); });
      $('#block'+block+'chain'+chain+'coinbaseto').bind('input propertychange', function() { updateChain(block, chain); });
      for (var x=0; $('#block'+block+'chain'+chain+'tx'+x+'value').length > 0; x++) {
        $('#block'+block+'chain'+chain+'tx'+x+'value').bind('input propertychange', function() { updateChain(block, chain); });
        $('#block'+block+'chain'+chain+'tx'+x+'from').bind('input propertychange', function() { updateChain(block, chain); });
        $('#block'+block+'chain'+chain+'tx'+x+'to').bind('input propertychange', function() { updateChain(block, chain); });
      }
      $('#block'+block+'chain'+chain+'mineButton').click(function(e) {
          e.preventDefault();
          var l = Ladda.create(this);
          l.start();
          setTimeout(function() {
              mine(block, chain, true);
              l.stop();
            }, 250); // give UI time to update
        });
    }
